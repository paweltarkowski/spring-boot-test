/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'Pavlo' at '11.09.16 10:18' with Gradle 3.0
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.0/userguide/tutorial_java_projects.html
 */

buildscript {
    repositories{
    	 jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.4.0.RELEASE")
    }
}
apply plugin: 'java'
apply plugin: 'spring-boot'
apply plugin: 'eclipse'

jar {
	baseName = 'contacts'
	version = '0.1.0'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8


// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
   jcenter()
}

ext {
	lombokVersion = '1.16.10'
	junitVersion = '4.12'
}

// In this section you declare the dependencies for your production and test code
dependencies {
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile "org.projectlombok:lombok:${lombokVersion}"
    compile 'org.thymeleaf:thymeleaf-spring4'
    compile 'org.springframework.boot:spring-boot-starter-data-jpa'
	compile 'com.h2database:h2'
	compile group: 'ma.glasnost.orika', name: 'orika-core', version: '1.4.6'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile "junit:junit:${junitVersion}"
}


